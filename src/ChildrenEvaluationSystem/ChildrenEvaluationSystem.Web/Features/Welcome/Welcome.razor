@page "/"
@using System.Security.Claims
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using ChildrenEvaluationSystem.Application.Models.Identity
@using ChildrenEvaluationSystem.Web.Features.Welcome.Validation
@using MudBlazor
@using ChildrenEvaluationSystem.Web.SharedComponents.Widgets
@using ChildrenEvaluationSystem.Web.SharedComponents.Controls
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.JSInterop
@using ChildrenEvaluationSystem.Web.SharedComponents.Values
@using ChildrenEvaluationSystem.Web.Features.Welcome.Components

@inject NavigationManager Navigation
@inject Application.Interfaces.IAuthenticationService AuthenticationService

@rendermode InteractiveServer

<div class="welcome-container">
    <div class="auth-stack">
        <GlassCard>
            <div class="card-header">
                <MudText Typo="Typo.h4" Class="card-title">Witamy w systemie</MudText>
                <MudText Typo="Typo.body1" Class="card-subtitle">Zaloguj się do swojego konta</MudText>
            </div>

            <div class="card-content">
                <div class="login-form">
                    <GlassTextField @bind-Value="Email"
                                    Label="Email"
                                    InputType="InputType.Text"
                                    HasError="@(!string.IsNullOrEmpty(EmailError))"
                                    ErrorText="@EmailError" />

                    <GlassTextField @bind-Value="Password"
                                    Label="Hasło"
                                    InputType="InputType.Password"
                                    HasError="@(!string.IsNullOrEmpty(PasswordError))"
                                    ErrorText="@PasswordError" />

                    <div class="button-group">
                        <GlassButton OnClick="HandleLogin"
                                     ButtonStyle="ButtonStyles.Primary"
                                     Class="@((IsValid ? "" : "disabled"))"
                                     Disabled="@(!IsValid)">Zaloguj się</GlassButton>
                        <GlassButton Class="mt-6"
                                     OnClick="HandleRegister"
                                     ButtonStyle="ButtonStyles.Secondary">Utwórz konto</GlassButton>
                    </div>
                </div>
            </div>
        </GlassCard>

        <div class="auth-divider">
            <span>lub skorzystaj z jednego z poniższych dostawców</span>
        </div>

        <div class="external-auth-container">
            <div class="external-auth-buttons">
                <ExternalAuthButton
                    Icon="@MicrosoftIcon"
                    Text="Microsoft"
                    OnClick="@(() => AuthenticationService.LoginAsync(new Uri(Navigation.Uri).PathAndQuery))" />
                <ExternalAuthButton
                    Icon="@GoogleIcon"
                    Text="Google"
                    OnClick="@(() => AuthenticationService.LogoutAsync(new Uri(Navigation.Uri).PathAndQuery))" />
            </div>
        </div>
    </div>
</div>