@page "/"
@using static Microsoft.AspNetCore.Components.Web.RenderMode
@using ChildrenEvaluationSystem.Application.Models.Identity
@using ChildrenEvaluationSystem.Web.Features.Welcome.Validation
@using MudBlazor
@using ChildrenEvaluationSystem.Web.SharedComponents.Widgets
@using ChildrenEvaluationSystem.Web.SharedComponents.Controls

@rendermode InteractiveServer

<div class="welcome-container">
    <div class="auth-stack">
        <GlassCard>
            <div class="card-header">
                <MudText Typo="Typo.h4" Class="card-title">Witamy w systemie</MudText>
                <MudText Typo="Typo.body1" Class="card-subtitle">Zaloguj się do swojego konta</MudText>
            </div>

            <div class="card-content">
                <div class="login-form">
                    <GlassTextField @bind-Value="Email"
                                    Label="Email"
                                    InputType="InputType.Text" 
                                    HasError="@(!string.IsNullOrEmpty(EmailError))"
                                    ErrorText="@EmailError" />

                    <GlassTextField @bind-Value="Password"
                                    Label="Hasło"
                                    InputType="InputType.Password" 
                                    HasError="@(!string.IsNullOrEmpty(PasswordError))"
                                    ErrorText="@PasswordError" />

                    <div class="button-group">
                        <GlassButton OnClick="HandleLogin" ButtonStyle="GlassButton.ButtonStyles.Primary"
                                     Class="@((IsValid ? "" : "disabled"))"
                                     Disabled="@(!IsValid)">
                            Zaloguj się
                        </GlassButton>
                        <GlassButton Class="mt-6" OnClick="HandleRegister" ButtonStyle="GlassButton.ButtonStyles.Secondary">
                            Utwórz konto
                        </GlassButton>
                    </div>
                </div>
            </div>
        </GlassCard>
        <div class="auth-divider">
            <span>lub skorzystaj z jednego z poniższych dostawców</span>
        </div>

        <div class="external-auth-container">
            <div class="external-auth-buttons">
                <GlassButton ButtonStyle="GlassButton.ButtonStyles.Glass"
                             OnClick="HandleMicrosoftLogin"
                             Class="external-auth-button">
                    <div class="auth-button-content">
                        <MudIcon Icon="@MicrosoftIcon" Class="auth-icon"/>
                        <span>Microsoft</span>
                    </div>
                </GlassButton>

                <GlassButton ButtonStyle="GlassButton.ButtonStyles.Glass"
                             OnClick="HandleGoogleLogin"
                             Class="external-auth-button">
                    <div class="auth-button-content">
                        <MudIcon Icon="@GoogleIcon" Class="auth-icon"/>
                        <span>Google</span>
                    </div>
                </GlassButton>
            </div>
        </div>
    </div>
</div>

@code {
    private string _email = string.Empty;
    private string _password = string.Empty;
    
    private string? EmailError { get; set; }
    private string? PasswordError { get; set; }
    
    private static string MicrosoftIcon => "<svg viewBox='0 0 23 23' xmlns='http://www.w3.org/2000/svg'><path fill='#f35325' d='M1 1h10v10H1z'/><path fill='#81bc06' d='M12 1h10v10H12z'/><path fill='#05a6f0' d='M1 12h10v10H1z'/><path fill='#ffba08' d='M12 12h10v10H12z'/></svg>";
    private static string GoogleIcon => "<svg viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'><path fill='#4285f4' d='M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z'/><path fill='#34a853' d='M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z'/><path fill='#fbbc05' d='M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z'/><path fill='#ea4335' d='M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z'/></svg>";
    
    private string Email {
        get => _email;
        set {
            _email = value;
            EmailError = LoginFormValidation.ValidateEmail(_email);
        }
    }

    private string Password {
        get => _password;
        set {
            _password = value;
            PasswordError = LoginFormValidation.ValidatePassword(_password);
        }
    }
    
    private bool IsValid =>
        string.IsNullOrEmpty(EmailError) &&
        string.IsNullOrEmpty(PasswordError) &&
        !string.IsNullOrWhiteSpace(Email) &&
        !string.IsNullOrWhiteSpace(Password);
    

    private async Task HandleLogin()
    {
        EmailError = LoginFormValidation.ValidateEmail(Email);
        PasswordError = LoginFormValidation.ValidatePassword(Password);
        if (!IsValid) return;
        
        var loginModel = new LoginModel
        {
            Email = Email,
            Password = Password
        };
        
        await Task.CompletedTask;
    }

    private void HandleRegister()
    {
       
    }
    
    private async Task HandleMicrosoftLogin()
    {
        
        await Task.CompletedTask;
    }

    private async Task HandleGoogleLogin()
    {
       
        await Task.CompletedTask;
    }
}

<style>
    
    .welcome-container {
        display: flex;
        justify-content: center;
        align-items: flex-start;
        padding: 0 20px;
    }

    .auth-stack {
        display: flex;
        flex-direction: column;
        align-items: stretch;
        max-width: 420px; 
        width: 100%;
        margin-top: 200px; 
    }

    .card-header {
        text-align: center;
        margin-bottom: 32px;
    }

    .card-title {
        font-weight: 700 !important;
        margin-bottom: 8px !important;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }

    .card-subtitle {
        color: #5A4633 !important;
        opacity: 0.8;
    }

    .login-form {
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .button-group {
        margin-top: 24px;
    }

    .mud-divider {
        margin: 20px 0 !important;
        color: #5A4633 !important;
        opacity: 0.6;
    }

    .auth-divider {
        display: flex;
        align-items: center;
        text-align: center;
        color: #5A4633;
        font-size: 14px;
        opacity: 0.8;
        margin: 32px 0 24px;
    }

    .auth-divider::before,
    .auth-divider::after {
        content: "";
        flex: 1;
        border-bottom: 1px solid rgba(90, 70, 51, 0.3);
    }

    .auth-divider:not(:empty)::before {
        margin-right: 12px;
    }

    .auth-divider:not(:empty)::after {
        margin-left: 12px;
    }

    .external-auth-container {
        margin-top: 0;
        width: 100%;
    }

    .external-auth-buttons {
        display: flex;
        gap: 16px;
        justify-content: center;
        align-items: center;
    }

    .external-auth-button {
        flex: 1;
        max-width: 200px;
    }

    .auth-button-content {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 12px;
        font-size: 14px;
        font-weight: 600;
    }

    .auth-icon {
        width: 18px !important;
        height: 18px !important;
        flex-shrink: 0;
    }

    @@media (max-width: 480px) {
        .welcome-container {
            padding: 0 16px;
        }
        .auth-stack {
            margin-top: 120px; 
        }
    
        .external-auth-buttons {
            flex-direction: column;
            gap: 12px;
            width: 100%;
        }
    
        .external-auth-button {
            max-width: 100%;
        }
    }
</style>