@using ChildrenEvaluationSystem.Web.SharedComponents.Values
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using MudBlazor

<button class="@BuildClass()"
        disabled="@Disabled"
        type="@HtmlButtonType"
        @onclick="OnClick"
        @attributes="AdditionalAttributes">
    @ChildContent
</button>

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    [Parameter] public Variant Variant { get; set; } = Variant.Filled;
    [Parameter] public Color Color { get; set; } = Color.Primary;

    [Parameter] public Size Size { get; set; } = Size.Large;
    [Parameter] public bool FullWidth { get; set; } = true;
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public string? Class { get; set; }
    [Parameter] public EventCallback<MouseEventArgs> OnClick { get; set; }
    [Parameter] public string Type { get; set; } = "button"; // "button" | "submit" | "reset"
    [Parameter(CaptureUnmatchedValues = true)] public Dictionary<string, object>? AdditionalAttributes { get; set; }

    [Parameter] public ButtonStyles ButtonStyle { get; set; } = ButtonStyles.Primary;

    private string BuildClass()
    {
        var classes = new List<string> { "glass-button", "glass-interactive", GetButtonClass(), GetSizeClass() };
        if (FullWidth) classes.Add("btn-fw");
        if (Disabled) classes.Remove("glass-interactive");
        if (!string.IsNullOrWhiteSpace(Class)) classes.Add(Class);
        return string.Join(" ", classes);
    }

    private string GetButtonClass() => ButtonStyle switch
    {
        ButtonStyles.Primary => "glass-button-primary",
        ButtonStyles.Secondary => "glass-button-secondary",
        ButtonStyles.Transparent => "glass-button-transparent",
        ButtonStyles.Glass => "glass-button-glass",
        _ => "glass-button-primary"
    };

    private string GetSizeClass() => Size switch
    {
        Size.Small => "btn-sm",
        Size.Medium => "btn-md",
        _ => "btn-lg"
    };

    private string HtmlButtonType => Type is "submit" or "reset" or "button" ? Type : "button";
}
